import javax.persistence.*;

@Entity
@Table(name = "users")
public class Users {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer userId; // Changed from personnelId to userId

    private String firstName;
    private String lastName;

    @Enumerated(EnumType.STRING)
    private UserType type; // Changed from PersonnelType to UserType; can be "admin" or "teacher"

    // Optional: add email, phone, etc.

    // Getters and Setters
    // ...
}

public enum UserType {
    ADMIN,
    TEACHER
}


import javax.persistence.*;

@Entity
@Table(name = "teacher_availability")
public class TeacherAvailability {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer availabilityId;

    @ManyToOne
    @JoinColumn(name = "personnel_id")
    private Personnel personnel;

    @Enumerated(EnumType.STRING)
    private DayOfWeek dayOfWeek; // Enum representing day of the week

    private String timeSlot; // Example: "08:00-10:00"

    // Getters and Setters
    // ...
}
import javax.persistence.*;

@Entity
@Table(name = "teaching_element")
public class Teat {
chingElemen
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer elementId;

    private String title;
    private String level;

    @ManyToOne
    @JoinColumn(name = "coordinator_id")
    private Personnel coordinator;

    // Getters and Setters
    // ...
}
import javax.persistence.*;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.List;

@Entity
@Table(name = "exam")
public class Exam {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer examId;

    @ManyToOne
    @JoinColumn(name = "teaching_element_id")
    private TeachingElement teachingElement;

    @Enumerated(EnumType.STRING)
    private Semester semester; // SPRING or AUTUMN

    @Enumerated(EnumType.STRING)
    private Session session; // NORMAL or RETAKE

    private String type; // e.g. "Devoir surveillé 1"

    private LocalDate date;
    private LocalTime startTime;

    private Integer plannedDuration;
    private Integer actualDuration;

    @ManyToOne
    @JoinColumn(name = "exam_coordinator_id")
    private Personnel examCoordinator;

    private Integer academicYear;

    private String examPaperFile; // File path to exam paper
    private String examReportFile; // File path to exam report
    private String textualReport; // Default to "Rien à signaler"

    @OneToMany(mappedBy = "exam")
    private List<ExamRoom> examRooms;

    @OneToMany(mappedBy = "exam")
    private List<ExamInvigilator> examInvigilators;

    @OneToMany(mappedBy = "exam")
    private List<ExamAbsenceController> examAbsenceControllers;

    // Getters and Setters
    // ...
}

public enum Semester {
    SPRING,
    AUTUMN
}

public enum Session {
    NORMAL,
    RETAKE
}
import javax.persistence.*;

@Entity
@Table(name = "exam_room")
public class ExamRoom {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer examRoomId;

    @ManyToOne
    @JoinColumn(name = "exam_id")
    private Exam exam;

    @ManyToOne
    @JoinColumn(name = "room_id")
    private Room room;

    private Integer numInvigilators; // Default to 2

    // Getters and Setters
    // ...
}
import javax.persistence.*;

@Entity
@Table(name = "exam_invigilator")
public class ExamInvigilator {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer invigilatorId;

    @ManyToOne
    @JoinColumn(name = "exam_id")
    private Exam exam;

    @ManyToOne
    @JoinColumn(name = "personnel_id")
    private Personnel personnel;

    // Getters and Setters
    // ...
}
import javax.persistence.*;

@Entity
@Table(name = "exam_absence_controller")
public class ExamAbsenceController {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer absenceControllerId;

    @ManyToOne
    @JoinColumn(name = "exam_id")
    private Exam exam;

    @ManyToOne
    @JoinColumn(name = "personnel_id")
    private Personnel personnel;

    // Getters and Setters
    // ...
}
import javax.persistence.*;

@Entity
@Table(name = "room")
public class Room {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer roomId;

    private String roomName; // e.g., "1NB", "Amphi A"
    private Integer capacity; // e.g., 50

    // Getters and Setters
    // ...
}
import javax.persistence.*;

@Entity
@Table(name = "invigilation_log")
public class InvigilationLog {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer logId;

    @ManyToOne
    @JoinColumn(name = "exam_id")
    private Exam exam;

    @ManyToOne
    @JoinColumn(name = "personnel_id")
    private Personnel personnel;

    private Integer hours;
    private Integer sessions;

    // Getters and Setters
    // ...
}
import javax.persistence.*;

@Entity
@Table(name = "absence_control_log")
public class AbsenceControlLog {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer logId;

    @ManyToOne
    @JoinColumn(name = "exam_id")
    private Exam exam;

    @ManyToOne
    @JoinColumn(name = "personnel_id")
    private Personnel personnel;

    private Integer sessions;

    // Getters and Setters
    // ...
}
